name: Java Maven CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: write
  actions: write
  checks: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Playwright and Chrome
        run: |
          xvfb-run --auto-servernum -- mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install chromium"

      - name: Build and Run Tests with Maven
        run: mvn -B clean verify

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            target/surefire-reports/
            target/allure-results/
          if-no-files-found: warn

  generate-allure-report:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Test Results
        uses: actions/download-artifact@v3
        with:
          name: test-results

      - name: Generate Allure Report
        run: |
          # Clean previous allure results and reports
          rm -rf allure-report
          mkdir -p allure-report
          # Generate the Allure report
          mvn allure:aggregate -Dallure.results.directory=target/allure-results
          mvn allure:report
          cp -R target/site/allure-report/* allure-report/

      - name: Archive Allure Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report
          if-no-files-found: warn

  deploy:
    runs-on: ubuntu-latest
    needs: generate-allure-report
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Allure Report
        uses: actions/download-artifact@v3
        with:
          name: allure-report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          publish_branch: gh-pages
          destination_dir: allure-reports
